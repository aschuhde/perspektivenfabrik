// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231222102137_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Data.DbEntities.DbAccessPolicy", b =>
                {
                    b.Property<Guid>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EntityIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EntityIndex"));

                    b.HasKey("EntityId");

                    b.ToTable("AccessPolicies");
                });

            modelBuilder.Entity("Infrastructure.Data.DbEntities.DbUser", b =>
                {
                    b.Property<Guid>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccessPolicyId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("CreatedByEntityId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EntityIndex"));

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("EntityId");

                    b.HasIndex("AccessPolicyId")
                        .IsUnique();

                    b.HasIndex("CreatedByEntityId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Infrastructure.Data.DbEntities.DbUserAccess", b =>
                {
                    b.Property<Guid>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccessPolicyId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("CreatedByEntityId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EntityIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EntityIndex"));

                    b.Property<string>("PermissionKey")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("EntityId");

                    b.HasIndex("AccessPolicyId");

                    b.HasIndex("CreatedByEntityId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAccesses");
                });

            modelBuilder.Entity("Infrastructure.Data.DbEntities.DbUser", b =>
                {
                    b.HasOne("Infrastructure.Data.DbEntities.DbAccessPolicy", "DbAccessPolicy")
                        .WithOne("CreatedBy")
                        .HasForeignKey("Infrastructure.Data.DbEntities.DbUser", "AccessPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Data.DbEntities.DbUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByEntityId");

                    b.Navigation("CreatedBy");

                    b.Navigation("DbAccessPolicy");
                });

            modelBuilder.Entity("Infrastructure.Data.DbEntities.DbUserAccess", b =>
                {
                    b.HasOne("Infrastructure.Data.DbEntities.DbAccessPolicy", "DbAccessPolicy")
                        .WithMany("UserAccesses")
                        .HasForeignKey("AccessPolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Data.DbEntities.DbUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByEntityId");

                    b.HasOne("Infrastructure.Data.DbEntities.DbUser", "DbUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("DbAccessPolicy");

                    b.Navigation("DbUser");
                });

            modelBuilder.Entity("Infrastructure.Data.DbEntities.DbAccessPolicy", b =>
                {
                    b.Navigation("CreatedBy");

                    b.Navigation("UserAccesses");
                });
#pragma warning restore 612, 618
        }
    }
}
